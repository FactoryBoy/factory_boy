[tox]
minversion = 1.9
envlist =
    lint
    docs
    examples
    linkcheck
    cov-begin
    cov-end
    py{37,38,39,310,py37,py38}-sqlite-{cov,nocov}
    py{37,38,39,py37,py38}-django22-mongo-alchemy-{sqlite,postgres}-{cov,nocov}
    py{37,38,39,310,py37,py38}-django32-mongo-alchemy-{sqlite,postgres}-{cov,nocov}
    py{38,39,310,py38}-django40-mongo-alchemy-{sqlite,postgres}-{cov,nocov}
    py310-djangomain-mongo-alchemy-{sqlite,postgres}-{cov,nocov}

toxworkdir = {env:TOX_WORK_DIR:.tox}

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310
    pypy-3.7: pypy37
    pypy-3.8: pypy38

[gh-actions:env]
DATABASE_TYPE =
    sqlite: sqlite
    postgres: postgres
RUN_COVERAGE =
    yes: cov
    no: nocov

[testenv]
passenv =
    MONGO_HOST
    POSTGRES_HOST
    POSTGRES_DATABASE
deps =
    cov: coverage
    alchemy: SQLAlchemy
    alchemy: sqlalchemy_utils
    mongo: mongoengine
    django{22,32,40,main}: Pillow
    django22: Django>=2.2,<2.3
    django32: Django>=3.2,<3.3
    django40: Django>=4.0,<4.1
    djangomain: https://github.com/django/django/archive/main.tar.gz
    py{37,38,39,310}-postgres: psycopg2-binary
    py{py37,py38}-postgres: psycopg2cffi

setenv =
    py-!postgres: DJANGO_SETTINGS_MODULE=tests.djapp.settings
    postgres: DJANGO_SETTINGS_MODULE=tests.djapp.settings_pg

whitelist_externals = make
commands =
    !cov: make test
    cov: make test-coverage

[testenv:cov-begin]
commands =
    coverage erase

[testenv:cov-end]
commands =
    coverage report
    coverage html

[testenv:docs]
extras = doc

whitelist_externals = make
commands = make doc spelling

[testenv:examples]
deps =
    -rexamples/requirements.txt

whitelist_externals = make
commands = make example-test

[testenv:linkcheck]
extras = doc

whitelist_externals = make
commands = make linkcheck

[testenv:lint]
deps =
    -rexamples/requirements.txt
    check_manifest
extras = dev

whitelist_externals = make
commands = make lint
